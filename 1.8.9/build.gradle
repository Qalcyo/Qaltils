/*
 * Wyvtils, a utility mod for 1.8.9.
 * Copyright (C) 2021 Wyvtils
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
        maven {
            url = "https://repo.spongepowered.org/maven/"
        }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url "https://maven.minecraftforge.net" }
        maven { url "https://jitpack.io" }
    }
    dependencies {
        classpath("com.github.ReplayMod:ForgeGradle:ceb83c0:all")
        classpath("dev.isXander:MixinGradle:0.6-SNAPSHOT")
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.mixin"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "com.github.gmazzo.buildconfig"
apply plugin: "org.jetbrains.kotlin.jvm"
apply plugin: "maven-publish"
apply plugin: "java"

archivesBaseName = project_name + "-1.8.9"
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    mappings = "stable_22"

    runDir = "run"
    makeObfSourceJar = false
    clientRunArgs += "--tweakClass gg.essential.loader.stage0.EssentialSetupTweaker"
    clientRunArgs += "--mixin mixins.${project_id}.json"
}

dependencies {
    shade(project(":core")) {
        exclude(module: "essential-1.8.9-forge")
        exclude(module: "kotlin-reflect")
        exclude(module: "kotlin-stdlib-jdk8")
        exclude(module: "kotlin-stdlib-jdk7")
        exclude(module: "kotlin-stdlib")
        exclude(module: "kotlinx-coroutines-core")
        exclude(module: "httpclient")
        exclude(module: "commons-lang3")
        exclude(module: "keventbus")
        exclude(module: "Mango")
    }
    implementation("com.github.Wyvest:keventbus:e8e05ea")
    shade ("gg.essential:loader-launchwrapper:1.1.2") {
        transitive = false
    }
    implementation "gg.essential:essential-1.8.9-forge:1551+release-launch"

    annotationProcessor("org.spongepowered:mixin:0.7.11-SNAPSHOT")
}

processResources {
    inputs.property "version", project.version

    filesMatching("mcmod.info") {
        expand "version": project.version
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}

tasks.reobfJar.dependsOn tasks.shadowJar

shadowJar {
    archiveClassifier.set("")
    configurations = [project.configurations.shade]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE

    exclude "LICENSE.md"
    exclude "pack.mcmeta"
    exclude "dummyThing"
    exclude "**/module-info.class"
    exclude "*.so"
    exclude "*.dylib"
    exclude "*.dll"
    exclude "*.jnilib"
    exclude "ibxm/**"
    exclude "com/jcraft/**"
    exclude "org/lwjgl/**"
    exclude "net/java/**"

    exclude "META-INF/proguard/**"
    exclude "META-INF/maven/**"
    exclude "META-INF/versions/**"
    exclude "META-INF/com.android.tools/**"

    exclude "fabric.mod.json"
}

reobf {
    shadowJar {
        classpath = sourceSets.main.compileClasspath
    }
}

mixin {
    disableRefMapWarning = true
    defaultObfuscationEnv searge
    add sourceSets.main, "mixins.${project_id}.refmap.json"
}

sourceSets {
    dummy
    main {
        compileClasspath += dummy.output
    }
}

jar {
    manifest.attributes(
            "ModSide": "CLIENT",
            "ForceLoadAsMod": true,
            "MixinConfigs": "mixins.${project_id}.json",
            "TweakClass": "gg.essential.loader.stage0.EssentialSetupTweaker",
            'FMLAT': 'wyvtils_at.cfg',
            "TweakOrder": "0"
    )

    enabled = false
}

task moveResources {
    doLast {
        try {
            ant.move file: "${buildDir}/resources/main", todir: "${buildDir}/classes/kotlin"
        } catch (Exception ignored) {
        }
    }
}

classes.dependsOn(moveResources)
