/*
 * Rysm, a utility mod for 1.8.9.
 * Copyright (C) 2021 Rysm
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
        maven {
            url = "https://repo.spongepowered.org/maven/"
        }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'https://maven.minecraftforge.net' }
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath('com.github.Wyvest:ForgeGradle:364653e3cf:all')
        classpath('dev.isXander:MixinGradle:0.6-SNAPSHOT')
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'java'
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
}

archivesBaseName = mod_name + " [1.8.9]"
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
version = mod_ver

minecraft {
    version = '1.8.9-11.15.1.2318-1.8.9'
    mappings = 'stable_22'

    runDir = 'run'
    makeObfSourceJar = false
    clientRunArgs += "--tweakClass xyz.qalcyo.requisiteessentialloader.RequisiteEssentialTweaker"
    clientRunArgs += "--mixin mixins.${mod_id}.json"
}

repositories {
    mavenCentral()
    maven {
        url = "http://maven.deftu.xyz/repository/maven-public/"
        allowInsecureProtocol = true
    }
    maven {
        url = "https://repo.sk1er.club/repository/maven-public/"
    }
    maven {
        url = "https://repo.spongepowered.org/maven/"
    }
    maven {
        url = "https://jitpack.io/"
    }
}

dependencies {
    shade(project(':core')) {
        exclude(module: "essential-1.8.9-forge")
        exclude(module: "kotlin-reflect")
        exclude(module: "kotlin-stdlib-jdk8")
        exclude(module: "kotlin-stdlib-jdk7")
        exclude(module: "kotlin-stdlib")
        exclude(module: "kotlinx-coroutines-core")
        exclude(module: "httpclient")
        exclude(module: "commons-lang3")
        exclude(module: "keventbus")
        exclude(module: "Mango")
    }
    shade ("com.github.Qalcyo:RequisiteEssentialLoader:39dee241bb") {
        transitive = false
    }
    implementation("com.github.Wyvest:keventbus:e8e05ea")
    shade ("gg.essential:loader-launchwrapper:1.1.1") {
        transitive = false
    }
    implementation('xyz.qalcyo.requisite:Requisite-1.8.9:2.0-beta5')
    shade('xyz.qalcyo.requisite:RequisiteInstaller-1.8.9:1.3.1') {
        transitive = false
    }
    implementation "gg.essential:essential-1.8.9-forge:1539+release-launch"

    annotationProcessor('org.spongepowered:mixin:0.7.11-SNAPSHOT')
}

tasks.reobfJar.dependsOn tasks.shadowJar

shadowJar {
    archiveClassifier.set("")
    configurations = [project.configurations.shade]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE

    exclude "LICENSE.md"
    exclude "pack.mcmeta"
    exclude "dummyThing"
    exclude "**/module-info.class"
    exclude "*.so"
    exclude "*.dylib"
    exclude "*.dll"
    exclude "*.jnilib"
    exclude "ibxm/**"
    exclude "com/jcraft/**"
    exclude "org/lwjgl/**"
    exclude "net/java/**"

    exclude "META-INF/proguard/**"
    exclude "META-INF/maven/**"
    exclude "META-INF/versions/**"
    exclude "META-INF/com.android.tools/**"

    exclude "fabric.mod.json"
}
//TODO: fix process resources
processResources {
    if (duplicatesStrategy != DuplicatesStrategy.EXCLUDE) {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        //include "bundle.project.json"

        expand(
                "version": project.version,
                "mcversion": project.minecraft.version
        )
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
        //exclude "bundle.project.json"
    }
}

reobf {
    shadowJar {
        classpath = sourceSets.main.compileClasspath
    }
}

mixin {
    disableRefMapWarning = true
    defaultObfuscationEnv searge
    add sourceSets.main, "mixins.${mod_id}.refmap.json"
}

sourceSets {
    dummy
    main {
        compileClasspath += dummy.output
        ext.refMap = "mixins.rysm.refmap.json"
    }
}

jar {
    manifest.attributes(
            "ModSide": "CLIENT",
            "ForceLoadAsMod": true,
            "MixinConfigs": "mixins.${mod_id}.json",
            "TweakClass": "xyz.qalcyo.requisiteessentialloader.RequisiteEssentialTweaker",
            "TweakOrder": "0"
    )

    enabled = false
}

task moveResources {
    doLast {
        try {
            ant.move file: "${buildDir}/resources/main", todir: "${buildDir}/classes/kotlin"
        } catch (Exception ignored) {
        }
    }
}

classes.dependsOn(moveResources)