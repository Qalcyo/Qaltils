plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "net.minecraftforge.gradle.forge" version "86b2392"
    id "org.jetbrains.kotlin.jvm" version "1.5.20"
}

ext.kotlin_version = "1.5.20"

version = "0.3.3"
group = "net.wyvest"
archivesBaseName = "Wyvtilities"

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
}

configurations {
    // Creates an extra configuration that implements `implementation` to be used later as the configuration that shades libraries
    include
    implementation.extendsFrom(include)
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.18'
    include("gg.essential:Vigilance:125-10809-SNAPSHOT")
}

/**
 * This task simply replaces the `${version}` and `${mcversion}` properties in the mcmod.info with the data from Gradle
 */
processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}

// This forces the build task to run shadowJar after
tasks.reobfJar.dependsOn(tasks.shadowJar)

// This adds support to ("embed", "shade", "include") libraries into our JAR
shadowJar {
    archiveClassifier.set("")
    configurations = [project.configurations.include]
    duplicatesStrategy DuplicatesStrategy.EXCLUDE


    exclude 'META-INF', 'META-INF/**'
    exclude 'org/jetbrains/annotations', 'org/jetbrains/annotations/**'
    relocate("gg.essential", "wyvtilities.essentialgg")

    exclude "LICENSE.md"
    exclude "pack.mcmeta"
    exclude "dummyThing"
    exclude "**/module-info.class"
    exclude "*.so"
    exclude "*.dylib"
    exclude "*.dll"
    exclude "*.jnilib"
    exclude "ibxm/**"
    exclude "com/jcraft/**"
    exclude "org/lwjgl/**"
    exclude "net/java/**"

    exclude "META-INF/proguard/**"
    exclude "META-INF/maven/**"
    exclude "META-INF/versions/**"
    exclude "META-INF/com.android.tools/**"

    exclude "fabric.mod.json"
}

sourceSets {
    main {
        output.resourcesDir = file("${buildDir}/classes/kotlin/main")
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.sk1er.club/repository/maven-public/" }
    jcenter()
    maven { url 'https://jitpack.io' }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
}

jar {
    manifest {
        attributes "ModSide": "CLIENT",
                'FMLAT': 'wyvtilities_at.cfg'
    }
}